name: DevOps CI

on:
  push:
    branches: [main]
  pull_request:
    branches: [main]

permissions:
  contents: write

jobs:
  lint-api:
    runs-on: ubuntu-latest
    name: Lint API
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: ./services/api/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./services/api
      - name: Run ESLint
        run: npx eslint . --ext .js
        working-directory: ./services/api

  lint-item-service:
    runs-on: ubuntu-latest
    name: Lint Item Service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: ./services/item-service/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./services/item-service
      - name: Run ESLint
        run: npx eslint . --ext .js
        working-directory: ./services/item-service

  test-api:
    runs-on: ubuntu-latest
    name: Test API
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: ./services/api/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./services/api
      - name: Run tests
        run: npm test
        working-directory: ./services/api

  test-item-service:
    runs-on: ubuntu-latest
    name: Test Item Service
    steps:
      - uses: actions/checkout@v3
      - name: Set up Node.js
        uses: actions/setup-node@v3
        with:
          node-version: 18
          cache: "npm"
          cache-dependency-path: ./services/item-service/package-lock.json
      - name: Install dependencies
        run: npm ci
        working-directory: ./services/item-service
      - name: Run tests
        run: npm test
        working-directory: ./services/item-service

  docker-build:
    runs-on: ubuntu-latest
    needs: [lint-api, lint-item-service, test-api, test-item-service]
    strategy:
      matrix:
        service: [api, item-service]
    name: Docker build ${{ matrix.service }}
    steps:
      - uses: actions/checkout@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Build ${{ matrix.service }} image
        uses: docker/build-push-action@v4
        with:
          context: ./services/${{ matrix.service }}
          push: false
          load: true
          tags: ${{ matrix.service }}:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  update-readme-badges:
    runs-on: ubuntu-latest
    if: always()
    steps:
      - uses: actions/checkout@v3
        with:
          ref: ${{ github.head_ref }}

      - name: Update README badges
        run: |
          REPO="${{ github.repository }}"
          REPO_ESC="${REPO//\//\\/}"

          # Update API Tests badge
          perl -i -pe 'BEGIN{undef $/;} s/(API Service\s*\|).*?(\|.*?\n)/$1 [![API Tests](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml\/badge.svg)](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml) $2/gs' README.md

          # Update API Lint badge
          perl -i -pe 'BEGIN{undef $/;} s/(API Service.*?\|).*?(\n)/$1 [![API Lint](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml\/badge.svg)](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml) $2/gs' README.md

          # Update Item Service Tests badge
          perl -i -pe 'BEGIN{undef $/;} s/(Item Service\s*\|).*?(\|.*?\n)/$1 [![Item Tests](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml\/badge.svg)](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml) $2/gs' README.md

          # Update Item Service Lint badge
          perl -i -pe 'BEGIN{undef $/;} s/(Item Service.*?\|).*?(\n)/$1 [![Item Lint](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml\/badge.svg)](https:\/\/github.com\/'"$REPO_ESC"'\/actions\/workflows\/ci.yml) $2/gs' README.md

      - name: Commit README changes
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add README.md
          git commit -m "Update README badges [skip ci]" || echo "No changes to commit"
          git push
