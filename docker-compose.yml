services:
  api:
    build:
      context: ./services/api
    ports:
      - "3001:3000"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MESSAGE_QUEUE_URL=${MESSAGE_QUEUE_URL:-amqp://rabbitmq:5672}
      - ITEM_EXCHANGE=${ITEM_EXCHANGE:-itemExchange}
      - ITEM_SERVICE_QUEUE=${ITEM_SERVICE_QUEUE:-itemServiceQueue}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - DB_ITEM_NAME=${DB_ITEM_NAME:-item}
      - MONGO_USERNAME=${MONGO_USERNAME:-root}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password}
    restart: on-failure
    volumes:
      - /app/node_modules

  item-service:
    build:
      context: ./services/item-service
    ports:
      - "3002:3000"
    depends_on:
      - mongo
      - rabbitmq
    environment:
      - MESSAGE_QUEUE_URL=${MESSAGE_QUEUE_URL:-amqp://rabbitmq:5672}
      - ITEM_EXCHANGE=${ITEM_EXCHANGE:-itemExchange}
      - ITEM_SERVICE_QUEUE=${ITEM_SERVICE_QUEUE:-itemServiceQueue}
      - MONGO_PORT=${MONGO_PORT:-27017}
      - MONGO_HOST=${MONGO_HOST:-mongo}
      - DB_ITEM_NAME=${DB_ITEM_NAME:-item}
      - MONGO_USERNAME=${MONGO_USERNAME:-root}
      - MONGO_PASSWORD=${MONGO_PASSWORD:-password}
    restart: on-failure
    volumes:
      - /app/node_modules

  mongo:
    image: mongo
    ports:
      - "27017:27017"
    volumes:
      - mongo-data:/data/db
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: password

  mongodb-exporter: # MongoDB Exporter for Prometheus
    image: percona/mongodb_exporter:0.40
    command:
      - "--mongodb.uri=mongodb://root:password@mongo:27017"
    ports:
      - "9216:9216"
    depends_on:
      - mongo

  rabbitmq:
    image: rabbitmq:management
    container_name: rabbitmq
    ports:
      - "5672:5672"
      - "15672:15672"
    environment:
      RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS: "-rabbit frame_max 131072"
    healthcheck:
      test: ["CMD", "rabbitmqctl", "status"]
      interval: 30s
      timeout: 10s
      retries: 5

  # Add Prometheus service
  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/etc/prometheus/console_libraries"
      - "--web.console.templates=/etc/prometheus/consoles"
      - "--web.enable-lifecycle"
    restart: unless-stopped

  # Add Grafana for visualization
  grafana:
    build: ./grafana
    container_name: grafana
    ports:
      - "3000:3000"
    depends_on:
      - prometheus
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
      - GF_USERS_ALLOW_SIGN_UP=false
    restart: unless-stopped

volumes:
  mongo-data:
  prometheus_data:

networks:
  default:
    driver: bridge
